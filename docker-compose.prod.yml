version: "3.7"

services:
    nodejs:
        image: ryanjgani/travel-app-backend:master
        container_name: nodejs
        restart: unless-stopped
        expose:
            - "8000"
        # ports:
        #   - "80:8000"
        env_file: .env
        environment:
            - NODE_ENV=production
        networks:
            - app-network

    webserver:
        image: nginx:mainline-alpine
        container_name: webserver
        restart: unless-stopped
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - web-root:/var/www/html
            - ./nginx-conf:/etc/nginx/conf.d
            - certbot-etc:/etc/letsencrypt
            - certbot-var:/var/lib/letsencrypt
            - dhparam:/etc/ssl/certs
        depends_on:
            - nodejs
        networks:
            - app-network

    certbot:
        image: certbot/certbot
        container_name: certbot
        volumes:
            - certbot-etc:/etc/letsencrypt
            - certbot-var:/var/lib/letsencrypt
            - web-root:/var/www/html
        depends_on:
            - webserver
        command: certonly --webroot --webroot-path=/var/www/html --email ryanscar9@gmail.com --agree-tos --no-eff-email --force-renewal -d api.travelapp.software -d www.api.travelapp.software

volumes:
    certbot-etc:
    certbot-var:
    web-root:
        driver: local
        driver_opts:
            type: none
            device: /home/ryan/node-app/views/
            o: bind
    dhparam:
        driver: local
        driver_opts:
            type: none
            device: /home/ryan/node-app/dhparam/
            o: bind

networks:
    app-network:
        driver: bridge
